on:
  push:
    branches:
      - main

env:
  ACTION_NAME: version-tag-docker-image

name: Main
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  latest-release:
    name: Retrieve latest release info
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.result.outputs.sha }}
      version: ${{ steps.result.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Get info on latest merged release
        id: result
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr list \
            --search "in:title chore(main): release" \
            --limit 1 \
            --state merged \
            --json number,title,mergeCommit \
            --jq '.[0]' > pr.json
          NUMBER=$(jq -r .number pr.json)
          echo number=$NUMBER >> $GITHUB_OUTPUT
          [[ -z $NUMBER ]] && echo "::error Failed to find any release PR" && exit 1
          SHA=$(jq -r .mergeCommit.oid pr.json)
          echo sha=$SHA >> $GITHUB_OUTPUT
          VERSION=$(jq -r .title pr.json | sed 's/chore(main): release //')
          echo version=$VERSION >> $GITHUB_OUTPUT

  push-test-image:
    name: Push test Docker image
    runs-on: ubuntu-latest
    needs: [latest-release]
    steps:
      - name: Log in to Docker registry
        uses: docker/login-action@v2.1.0
        with:
          registry: docker.io
          username: integrationtester
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          TAG: ${{ needs.latest-release.outputs.sha }}
        with:
          push: true
          file: test.Dockerfile
          tags: integrationtester/version-tag-docker-image-action-tester:${{ env.TAG }}

  test:
    name: Test action
    runs-on: ubuntu-latest
    needs: [push-test-image, latest-release]
    env:
      DEBUG: "true"
      DRY_RUN: "true"
    steps:
      - uses: actions/checkout@v3
      - name: Run action
        uses: ./
        id: action
        with:
          image: integrationtester/version-tag-docker-image-action-tester
          version: "${{ needs.latest-release.outputs.version }}"
          registry: docker.io
          username: integrationtester
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Ensure that version output is as expected
        shell: bash
        run: |
          if [[ "${{ steps.action.outputs.version }}" != "${{ needs.latest-release.outputs.version }}" ]]; then
            echo "::error Aciton output version not the expected value"
            exit 1
          fi
      - name: Ensure that commit-sha output is not empty
        shell: bash
        run: |
          if [[ -z ${{ steps.action.outputs.commit-sha }} ]]; then
            echo "::error commit-sha output value unexpectedly empty"
            exit 1
          fi
      - name: Ensure that pr-number output is not empty
        shell: bash
        run: |
          if [[ -z ${{ steps.action.outputs.pr-number }} ]]; then
            echo "::error pr-number output value unexpectedly empty"
            exit 1
          fi

  release-please:
    runs-on: ubuntu-latest
    needs: [pre-commit, test]
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: ${{ env.ACTION_NAME }}
          bump-minor-pre-major: true
      - uses: actions/checkout@v3
      - name: Tag major and minor versions in Git
        if: ${{ steps.release.outputs.release_created }}
        uses: jacobsvante/tag-major-minor-action@v0
        with:
          major: ${{ steps.release.outputs.major }}
          minor: ${{ steps.release.outputs.minor }}
